{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroUIBundle::macros.html.twig' as UI %}
{% import 'OroEntityConfigBundle::macros.html.twig' as entityConfig %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% oro_title_set({params : {"%entity.summary%": entity.summary|default('N/A') }}) %}

{% block navButtons %}
    {% if entity.type == 'story' and resource_granted('oro_issue_create') %}
        {{ UI.addButton({
        'path' : path('oro_subissue_create', {'parentIssueCode' : entity.code}),
        'entity_label': 'oro.issue.subentity.label'|trans
        }) }}
    {% endif %}
    {% if resource_granted('EDIT', entity) %}
        {{ UI.editButton({
        'path' : path('oro_issue_update', { id: entity.id }),
        'entity_label': 'oro.issue.entity.label'|trans
        }) }}
    {% endif %}
    {% if resource_granted('DELETE', entity) %}
        {{ UI.deleteButton({
        'dataUrl': path('oro_api_delete_issue', {'id': entity.id}),
        'dataRedirect': path('oro_issue_index'),
        'aCss': 'no-hash remove-button',
        'id': 'btn-remove-user',
        'dataId': entity.id,
        'entity_label': 'oro.issue.entity.label'|trans
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
    'entity': entity,
    'indexPath': path('oro_issue_index'),
    'indexLabel': 'oro.issue.entity_plural.label'|trans,
    'entityTitle': entity.summary
    } %}
    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {%- set issueInformation -%}
    <div class="row-fluid form-horizontal">
        <div class="responsive-block">
            {{ UI.renderProperty('oro.issue.summary.label'|trans, entity.summary) }}
            {{ UI.renderProperty('oro.issue.code.label'|trans, entity.code) }}
            {{ UI.renderHtmlProperty('oro.issue.description.label'|trans, entity.description|nl2br) }}
            {{ UI.renderProperty('oro.issue.organization.label'|trans, entity.organization) }}
            {{ UI.renderProperty('oro.issue.type.label'|trans, entity.type) }}
            {{ UI.renderProperty('oro.issue.resolution.label'|trans, entity.resolution) }}
            {{ UI.renderProperty('oro.issue.assignee.label'|trans, entity.assignee) }}
            {{ UI.renderProperty('oro.issue.reporter.label'|trans, entity.reporter) }}
            {{ UI.renderProperty('oro.issue.created.label'|trans, entity.createdAt|oro_format_datetime) }}
            {{ UI.renderProperty('oro.issue.updated.label'|trans, entity.updatedAt|oro_format_datetime) }}
            {{ UI.renderProperty('oro.issue.priority.label'|trans, entity.priority) }}

            {%- set ownerData -%}
            {%- if entity.owner -%}
                {% if resource_granted('oro_user_user_view') %}
                    <a href="{{ path('oro_user_view', {'id': entity.owner.id}) }}">
                        {{ entity.owner|oro_format_name|escape }}
                    </a>
                {% else %}
                    {{ entity.owner|oro_format_name|escape }}
                {% endif %}
            {%- endif -%}
            {%- endset -%}
            {{ UI.renderHtmlProperty('oro.issue.owner.label'|trans, ownerData) }}

            {% if entity.parent is not empty %}
                    {{ UI.button({
                    'path':  path('oro_issue_view', {'id': entity.parent.id}),
                    'label': 'oro.issue.parent_issue.label'|trans,
                    'title': 'oro.issue.parent_issue.label'|trans,
                    }) }}
            {% endif %}
        </div>
        <div class="responsive-block">
            {{ entityConfig.renderDynamicFields(entity) }}
        </div>
    </div>
    {%- endset -%}

    {% set dataBlocks = [
    {
    'title': 'General Information'|trans,
    'class': 'active',
    'subblocks': [
    {'data' : [issueInformation]}
    ]
    }
    ] %}

    {% if entity.type == 'story' %}
        {% set dataBlocks = dataBlocks|merge([{
        'title': 'oro.issue.subissue.label'|trans,
        'subblocks': [{
        'title': '',
        'useSpan': false,
        'data' : [dataGrid.renderGrid('sub-issue-grid', {'parent_id': entity.id})]
        }]
        }] ) %}
    {% endif %}

    {% set id = 'issueView' %}
    {% set data = { 'dataBlocks': dataBlocks } %}

    {{ parent() }}
{% endblock content_data %}